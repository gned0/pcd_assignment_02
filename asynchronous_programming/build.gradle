/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "org.openjfx.javafxplugin" version "0.0.13"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // vertx
    implementation("io.vertx:vertx-core:4.4.1")
    implementation("io.vertx:vertx-web:4.4.1")
    implementation("io.vertx:vertx-web-client:4.4.1")
    implementation group: 'io.netty', name: 'netty-handler', version: '4.1.90.Final'

    // RxJava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.4'
}

application {
    // Define the main class for the application.
    mainClass = 'main.AnalyserDemo'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
}

run {
    standardInput = System.in
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["--enable-preview"]
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += ["--enable-preview"]
}
